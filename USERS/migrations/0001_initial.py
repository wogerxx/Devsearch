# Generated by Django 5.1.3 on 2024-11-10 21:55

import USERS.managers
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=50, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=50, verbose_name="Last Name"),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="User Name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=100, unique=True, verbose_name="Email"
                    ),
                ),
                ("bio", models.TextField(blank=True, null=True, verbose_name="About")),
                (
                    "bio_en",
                    models.TextField(blank=True, null=True, verbose_name="About"),
                ),
                (
                    "bio_uz",
                    models.TextField(blank=True, null=True, verbose_name="About"),
                ),
                (
                    "bio_ru",
                    models.TextField(blank=True, null=True, verbose_name="About"),
                ),
                (
                    "profile_image",
                    models.ImageField(
                        default="profile-images/default-user.png",
                        upload_to="profile_images/",
                        verbose_name="Profile Image",
                    ),
                ),
                ("location", models.CharField(max_length=50, verbose_name="Location")),
                ("occupation", models.TextField(blank=True, null=True)),
                ("occupation_en", models.TextField(blank=True, null=True)),
                ("occupation_uz", models.TextField(blank=True, null=True)),
                ("occupation_ru", models.TextField(blank=True, null=True)),
                (
                    "social_telegram",
                    models.URLField(blank=True, null=True, verbose_name="Telegram"),
                ),
                (
                    "social_whatsapp",
                    models.URLField(blank=True, null=True, verbose_name="WhatsApp"),
                ),
                (
                    "social_instagram",
                    models.URLField(blank=True, null=True, verbose_name="Instagram"),
                ),
                (
                    "social_facebook",
                    models.URLField(blank=True, null=True, verbose_name="Facebook"),
                ),
                (
                    "social_linkedin",
                    models.URLField(blank=True, null=True, verbose_name="LinkedIn"),
                ),
                (
                    "social_youtube",
                    models.URLField(blank=True, null=True, verbose_name="YouTube"),
                ),
                (
                    "social_git",
                    models.URLField(blank=True, null=True, verbose_name="GitHub"),
                ),
                (
                    "social_website",
                    models.URLField(blank=True, null=True, verbose_name="Website"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", USERS.managers.MyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("discription", models.TextField(blank=True, null=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
